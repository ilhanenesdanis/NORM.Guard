name: Publish NuGet Package

on:
  push:
    branches:
      - nuget

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x' 

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Read package details
        id: package_info
        run: |
          PACKAGE_ID=$(cat *.csproj | grep -oP '(?<=<PackageId>).*?(?=</PackageId>)')
          PACKAGE_VERSION=$(cat *.csproj | grep -oP '(?<=<Version>).*?(?=</Version>)')
          echo "PACKAGE_ID=$PACKAGE_ID" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "üì¶ Package: $PACKAGE_ID - Version: $PACKAGE_VERSION"

      - name: Check if package version exists on NuGet
        id: check_nuget
        run: |
          EXISTS=$(curl -s "https://api.nuget.org/v3-flatcontainer/${{ env.PACKAGE_ID }}/index.json" | grep -c "\"${{ env.PACKAGE_VERSION }}\"")
          if [ "$EXISTS" -gt 0 ]; then
            echo "‚ö†Ô∏è NuGet version ${{ env.PACKAGE_VERSION }} already exists. Skipping publish."
            exit 0
          fi

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output nupkg

      - name: Publish to NuGet
        run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_AUTH_TOKEN }} --source https://api.nuget.org/v3/index.json --skip-duplicate
